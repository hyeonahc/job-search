{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonah/Documents/GitHub/job-search/front-update/src/context/job-post-context.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from 'react';\nimport axios from 'axios'; // import Mock_Data from '../data/Mock_Data.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mock_API = Mock_Data;\nconst JobPostContext = /*#__PURE__*/createContext({\n  sate: {\n    // title: 'title-1',\n    // companyName: 'company-name-1',\n    // foundingDate: 'founding-date-1',\n    // revenue: 'revenue-1',\n    // employee: 'employee-1',\n    posts: [{\n      companyName: 'company-name-1'\n    }, {\n      title: 'title-1'\n    }, {\n      foundingDate: 'founding-date-1'\n    }, {\n      revenue: 'revenue-1'\n    }, {\n      employee: 'employee-1'\n    }]\n  },\n  actions: {\n    // setTitle: () => {},\n    // setCompanyName: () => {},\n    // setFoundingDate: () => {},\n    // setRevenue: () => {},\n    // setEmployee: () => {},\n    setPosts: () => {}\n  }\n});\n\nconst JobPostProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [title, setTitle] = useState('');\n  // const [companyName, setCompanyName] = useState('');\n  // const [foundingDate, setFoundingDate] = useState('');\n  // const [revenue, setRevenue] = useState('');\n  // const [employee, setEmployee] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(Mock_API);\n        setPosts(res.data.posts);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const value = {\n    state: {\n      posts\n    },\n    actions: {\n      setPosts\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(JobPostProvider.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobPostProvider, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = JobPostProvider;\nconst {\n  Consumer: JobPostConsumer\n} = JobPostContext;\nexport { JobPostProvider, JobPostConsumer };\nexport default JobPostContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPostProvider\");","map":{"version":3,"sources":["/Users/hyeonah/Documents/GitHub/job-search/front-update/src/context/job-post-context.js"],"names":["useState","createContext","useEffect","axios","Mock_API","Mock_Data","JobPostContext","sate","posts","companyName","title","foundingDate","revenue","employee","actions","setPosts","JobPostProvider","children","fetchData","res","get","data","e","console","error","value","state","Consumer","JobPostConsumer"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,MAAMC,QAAQ,GAAGC,SAAjB;AAEA,MAAMC,cAAc,gBAAGL,aAAa,CAAC;AACnCM,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADK,EAEL;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFK,EAGL;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHK,EAIL;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAJK,EAKL;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KALK;AANH,GAD6B;AAenCC,EAAAA,OAAO,EAAE;AACP;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE,MAAM,CAAE;AANX;AAf0B,CAAD,CAApC;;AAyBA,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,QAAM,CAACT,KAAD,EAAQO,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUhB,QAAV,CAAlB;AACAW,QAAAA,QAAQ,CAACI,GAAG,CAACE,IAAJ,CAASb,KAAV,CAAR;AACD,OAHD,CAGE,OAAOc,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAPD;;AAQAJ,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMO,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE;AAAElB,MAAAA;AAAF,KADK;AAEZM,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFG,GAAd;AAKA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEU,KAAjC;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BD;;GAAMD,e;;KAAAA,e;AAgCN,MAAM;AAAEW,EAAAA,QAAQ,EAAEC;AAAZ,IAAgCtB,cAAtC;AAEA,SAASU,eAAT,EAA0BY,eAA1B;AAEA,eAAetB,cAAf","sourcesContent":["import { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\n// import Mock_Data from '../data/Mock_Data.json';\n\nconst Mock_API = Mock_Data;\n\nconst JobPostContext = createContext({\n  sate: {\n    // title: 'title-1',\n    // companyName: 'company-name-1',\n    // foundingDate: 'founding-date-1',\n    // revenue: 'revenue-1',\n    // employee: 'employee-1',\n    posts: [\n      { companyName: 'company-name-1' },\n      { title: 'title-1' },\n      { foundingDate: 'founding-date-1' },\n      { revenue: 'revenue-1' },\n      { employee: 'employee-1' },\n    ],\n  },\n  actions: {\n    // setTitle: () => {},\n    // setCompanyName: () => {},\n    // setFoundingDate: () => {},\n    // setRevenue: () => {},\n    // setEmployee: () => {},\n    setPosts: () => {},\n  },\n});\n\nconst JobPostProvider = ({ children }) => {\n  // const [title, setTitle] = useState('');\n  // const [companyName, setCompanyName] = useState('');\n  // const [foundingDate, setFoundingDate] = useState('');\n  // const [revenue, setRevenue] = useState('');\n  // const [employee, setEmployee] = useState('');\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(Mock_API);\n        setPosts(res.data.posts);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const value = {\n    state: { posts },\n    actions: { setPosts },\n  };\n\n  return (\n    <JobPostProvider.Provider value={value}>\n      {children}\n    </JobPostProvider.Provider>\n  );\n};\n\nconst { Consumer: JobPostConsumer } = JobPostContext;\n\nexport { JobPostProvider, JobPostConsumer };\n\nexport default JobPostContext;\n"]},"metadata":{},"sourceType":"module"}