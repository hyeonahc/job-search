{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonah/Documents/GitHub/job-search/front/src/context/job-post-context.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst saraminData = '/MOCK_DATA.json'; // const saraminData = '/search_human.json';\n// const saraminData = process.env.REACT_APP_SERVER_HOST;\n// console.log(process.env);\n\nconst JobPostContext = /*#__PURE__*/createContext({\n  sate: {\n    posts: []\n  },\n  actions: {\n    setPosts: () => {}\n  }\n});\n\nconst JobPostProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const fetchData = async () => {\n    //   try {\n    //     const res = await axios.get(saraminData);\n    //     // console.log(res.data.content);\n    //     setPosts(res.data.content);\n    //   } catch (e) {\n    //     console.error(e);\n    //   }\n    // };\n    // fetchData(saraminData);\n    axios.get(saraminData).then(_ref2 => {\n      let {\n        data: {\n          content\n        }\n      } = _ref2;\n      setPosts(content);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const value = {\n    state: {\n      posts\n    },\n    actions: {\n      setPosts\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(JobPostContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobPostProvider, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = JobPostProvider;\nconst {\n  Consumer: JobPostConsumer\n} = JobPostContext;\nexport { JobPostProvider, JobPostConsumer };\nexport default JobPostContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPostProvider\");","map":{"version":3,"sources":["/Users/hyeonah/Documents/GitHub/job-search/front/src/context/job-post-context.js"],"names":["useState","createContext","useEffect","axios","saraminData","JobPostContext","sate","posts","actions","setPosts","JobPostProvider","children","get","then","data","content","catch","error","console","log","value","state","Consumer","JobPostConsumer"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,iBAApB,C,CACA;AACA;AACA;;AAEA,MAAMC,cAAc,gBAAGJ,aAAa,CAAC;AACnCK,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAD6B;AAInCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,MAAM,CAAE;AADX;AAJ0B,CAAD,CAApC;;AASA,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACJ,KAAD,EAAQE,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CACFS,GADH,CACOR,WADP,EAEGS,IAFH,CAEQ,SAA2B;AAAA,UAA1B;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAA0B;AAC/BN,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,QAAMG,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE;AAAEd,MAAAA;AAAF,KADK;AAEZC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFG,GAAd;AAKA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEW,KAAhC;AAAA,cAAwCT;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhCD;;GAAMD,e;;KAAAA,e;AAkCN,MAAM;AAAEY,EAAAA,QAAQ,EAAEC;AAAZ,IAAgClB,cAAtC;AAEA,SAASK,eAAT,EAA0Ba,eAA1B;AAEA,eAAelB,cAAf","sourcesContent":["import { useState, createContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst saraminData = '/MOCK_DATA.json';\r\n// const saraminData = '/search_human.json';\r\n// const saraminData = process.env.REACT_APP_SERVER_HOST;\r\n// console.log(process.env);\r\n\r\nconst JobPostContext = createContext({\r\n  sate: {\r\n    posts: [],\r\n  },\r\n  actions: {\r\n    setPosts: () => {},\r\n  },\r\n});\r\n\r\nconst JobPostProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // const fetchData = async () => {\r\n    //   try {\r\n    //     const res = await axios.get(saraminData);\r\n    //     // console.log(res.data.content);\r\n    //     setPosts(res.data.content);\r\n    //   } catch (e) {\r\n    //     console.error(e);\r\n    //   }\r\n    // };\r\n    // fetchData(saraminData);\r\n    axios\r\n      .get(saraminData)\r\n      .then(({ data: { content } }) => {\r\n        setPosts(content);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const value = {\r\n    state: { posts },\r\n    actions: { setPosts },\r\n  };\r\n\r\n  return (\r\n    <JobPostContext.Provider value={value}>{children}</JobPostContext.Provider>\r\n  );\r\n};\r\n\r\nconst { Consumer: JobPostConsumer } = JobPostContext;\r\n\r\nexport { JobPostProvider, JobPostConsumer };\r\n\r\nexport default JobPostContext;\r\n"]},"metadata":{},"sourceType":"module"}